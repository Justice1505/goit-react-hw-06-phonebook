{"version":3,"sources":["Components/Phonebook/Phonebook.module.css","Components/filter/Filter.module.css","Redux/phonebook/phonebook-selectors.js","Redux/phonebook/phonebook-actions.js","Components/contactList/ContactItem.js","Components/contactList/ContactList.js","Components/Phonebook/formData.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/Phonebook/Phonebook.js","Redux/phonebook/phonebook-reducers.js","Redux/store.js","App.js","index.js","Components/contatctForm/ContactForm.module.css","Components/contactList/ContactList.module.css"],"names":["module","exports","getFilter","store","filter","getFilterList","createSelector","items","contacts","filterItem","toLowerCase","item","name","includes","addToPhonebook","createAction","removeFromPhonebook","filterPhonebook","ContactItem","number","id","dispatch","useDispatch","className","s","span","btn","type","onClick","ContactsList","filterList","useSelector","list","map","FormData","pattern","title","ContactForm","useState","setName","setNumber","nameInputIdRef","useRef","generate","numberInputIdRef","reset","form","onSubmit","e","preventDefault","isAvailableName","find","contact","isAvailableNumber","alert","action","addToContact","label","htmlFor","current","input","required","value","onChange","target","Filter","Phonebook","styles","container","Title","itemsReducer","createReducer","payload","newContact","push","idx","findIndex","splice","filterReducer","_","combineReducers","configureStore","reducer","contactsReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4bcbd21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__39VJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__njmMC\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (store) => store.items;\r\n\r\nexport const getFilter = (store) => store.filter;\r\n\r\nexport const getFilterList = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterItem = filter.toLowerCase();\r\n    const filterContacts = contacts.filter((item) =>\r\n      item?.name?.toLowerCase().includes(filterItem)\r\n    );\r\n    return filterContacts;\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addToPhonebook = createAction(\"phonebook/add\");\r\n\r\nexport const removeFromPhonebook = createAction(\"phonebook/remove\");\r\n\r\nexport const filterPhonebook = createAction(\"phonebok/filter\");\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeFromPhonebook } from \"../../Redux/phonebook/phonebook-actions\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n  const removeFromContact = () => {\r\n    dispatch(removeFromPhonebook(id));\r\n  };\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.span}>\r\n        {name} {number}\r\n      </p>\r\n      <button className={s.btn} type=\"button\" onClick={removeFromContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getFilterList } from \"../../Redux/phonebook/phonebook-selectors\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactsList = () => {\r\n  const filterList = useSelector(getFilterList);\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {filterList.map(({ name, number, id }) => (\r\n          <ContactItem key={id} name={name} number={number} id={id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","const FormData = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type: \"tel\",\n    name: \"number\",\n    pattern:\n      \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\n      \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n  },\n};\n\nexport default FormData;\n","import React, { useRef } from \"react\";\r\nimport { generate } from \"shortid\";\r\nimport { useState } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport FormData from \"../Phonebook/formData\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addToPhonebook } from \"../../Redux/phonebook/phonebook-actions\";\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector((store) => store.items);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameInputIdRef = useRef(generate());\r\n  const numberInputIdRef = useRef(generate());\r\n\r\n  const addToContact = () => {\r\n    const isAvailableName = contacts.find((contact) => contact.name === name);\r\n    const isAvailableNumber = contacts.find(\r\n      (contact) => contact.number === number\r\n    );\r\n    if (isAvailableName) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (isAvailableNumber) {\r\n      alert(`${number} is already in contacts`);\r\n      return;\r\n    }\r\n    const action = addToPhonebook({ name, number });\r\n    dispatch(action);\r\n  };\r\n\r\n  const changeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addToContact();\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n          <label className={s.label} htmlFor={nameInputIdRef.current}>\r\n            Name:\r\n            <input\r\n              {...FormData.name}\r\n              className={s.input}\r\n              required\r\n              value={name}\r\n              onChange={changeName}\r\n              id={nameInputIdRef.current}\r\n            />\r\n          </label>\r\n          <label className={s.label} htmlFor={numberInputIdRef.current}>\r\n            Number:\r\n            <input\r\n              {...FormData.number}\r\n              className={s.input}\r\n              required\r\n              value={number}\r\n              onChange={changeNumber}\r\n              id={numberInputIdRef.current}\r\n            />\r\n          </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterPhonebook } from \"../../Redux/phonebook/phonebook-actions\";\r\nimport { getFilter } from \"../../Redux/phonebook/phonebook-selectors\";\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = ({ target }) => {\r\n    dispatch(filterPhonebook(target.value));\r\n  };\r\n  return (\r\n    <label className={s.label}>Find contact by name:\r\n      <input\r\n        className={s.input}\r\n        onChange={onChange}\r\n        value={filter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n      />\r\n    </label>\r\n\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n","import styles from \"./Phonebook.module.css\";\nimport ContactsList from \"../contactList/ContactList\";\nimport FormMain from \"../../Components/contatctForm/ContactForm\";\nimport Filter from \"../filter/Filter\";\n\nconst Phonebook = () => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.Title}>Phonebook</h2>\n      <FormMain />\n      <h2 className={styles.Title}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addToPhonebook,\r\n  removeFromPhonebook,\r\n  filterPhonebook,\r\n} from \"./phonebook-actions\";\r\nimport { generate } from \"shortid\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addToPhonebook]: (store, { payload }) => {\r\n    const newContact = { ...payload, id: generate() };\r\n    store.push(newContact);\r\n  },\r\n  [removeFromPhonebook]: (store, { payload }) => {\r\n    const idx = store.findIndex(({ id }) => id === payload);\r\n    store.splice(idx, 1);\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterPhonebook]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport contactsReducer from \"./phonebook/phonebook-reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: contactsReducer,\r\n});\r\n\r\nexport default store;\r\n","import \"./App.css\";\r\nimport Phonebook from \"./Components/Phonebook/Phonebook\"\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"block\">\r\n    <Provider store={store}>\r\n        <Phonebook />\r\n    </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__26f7E\",\"label\":\"ContactForm_label__3SF-A\",\"btn\":\"ContactForm_btn__eXY_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__3krWV\",\"item\":\"ContactList_item__38G2Y\",\"span\":\"ContactList_span__30Qe8\"};"],"sourceRoot":""}